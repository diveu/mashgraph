Фичи:
1) LBP
Суть в том, что в дополнительной структуре Filters, которая используется для реализации фильтров, в конструкторе есть параметр lbp, при заполнении которого используется пороговая схема. То есть пороговая фильтрация в клетке 3х3 рассматривается, как применение фильтра с ядром, составленным из степеней двойки с нулем в середине и применяется, если в середине (которая вычисляется как целая часть от r/2) число меньше либо равно, соседу. Разбиение изображения на части (64 штуки) идёт там же, где и HOG

2) Цветовые признаки:

Сначала картинку переводим из BMP в матрицу пикселей. Затем, аналогично разбиению из HOG и LBP делим на 64 части. Далее, создаём вектор из подматриц (их 64, как сказано раньше), при этом все эти матрицы забиты средними значениями пикселей. Можно было бы пропустить этот шаг и сразу добавлять средние значения в результирующий вектор, но для чистоты эксперимента я сделал так. После всех манипуляций с матрицами, создаём вектор из средних значений цветов и поочерёдно добавляем туда средние цвета каждой матрицы, при этом нормализуя их (деля на 255.0, чтобы было float).

Программа идёт без дополнительных параметров, по дефолту запускается полностью выполненное задание со всеми доп частями. Точность у меня на машине (macbook air 2013 11 дюймов) порядка 98-99 процентов.

Норма в HOG и LBP взята L2 - корень из суммы евклидовой нормы и малого eps. Все изображения во всех методах делятся стандартно на 64 части, в HOG сегмент разделен на 32 части и смещён на PI вправо. Всё остальное выполнено согласно ТЗ.